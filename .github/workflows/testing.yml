name: testing

on:
  push:
    branches:
    - develop

  pull_request:

# Cancel running workflows when additional changes are pushed
# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#example-using-a-fallback-value
concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          cache: pip
          cache-dependency-path: pyproject.toml

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/requirements.txt
          pip install .[dev]

      - name: Lint
        run: pre-commit run --all-files --show-diff-on-failure

  build-test-bench:
    name: "Build test bench container"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build test bench container
        uses: docker/bake-action@v5
        with:
          load: true 
          files: tests/integration/dockerfiles/docker-bake.hcl
          set: |
            *.cache-to=type=gha,scope=global,mode=max
            *.cache-from=type=gha,scope=global

  test:
    needs: [build-test-bench]
    services:
      local_mongodb:
        image: mongo:5.0
        ports:
          - 27017:27017

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.9', '3.10', '3.11']

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: pyproject.toml

      - name: Load previously built Docker images
        uses: docker/bake-action@v5
        with:
          files: tests/integration/dockerfiles/docker-bake.hcl
          load: true
          set: |
            *.cache-from=type=gha,scope=global

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/requirements.txt
          pip install .[tests]

      - name: Unit tests
        run: pytest --cov=jobflow_remote --cov-report=xml --cov-config pyproject.toml --ignore tests/integration

      - name: Integration tests
        run: pytest --cov=jobflow_remote --cov-append --cov-report=xml --cov-config pyproject.toml tests/integration

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  docs:
    name: Build documentation
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: true
        fetch-depth: 0

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install docs dependencies
      run: |
        python -m pip install -U pip
        pip install -U setuptools wheel
        # Required to generate rst files from markdown
        sudo apt install pandoc
        pip install -r requirements/requirements.txt
        pip install .[docs]

    - name: Build Sphinx docs
      working-directory: doc
      run: |
        # cannot use sphinx build directly as the makefile handles generation
        # of some rst files
        make html

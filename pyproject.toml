[project]
name = "jobflow-remote"
description = "Jobflow Remote is a Python package to run jobflow workflows on remote resources"
readme = "README.md"
keywords = []
license = { text = "modified BSD" }
authors = [{ name = "Guido Petretto", email = "guido.petretto@matgenix.com" }]
dynamic = ["version"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "Intended Audience :: System Administrators",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.9",
    "Topic :: Other/Nonlisted Topic",
    "Topic :: Scientific/Engineering",
]
requires-python = ">=3.9"
dependencies = [
    "fabric ~= 3.2",
    "flufl.lock ~= 8.0",
    "jobflow >= 0.1.14",
    "psutil ~= 5.9",
    "pydantic ~= 2.4",
    "qtoolkit ~= 0.1, >= 0.1.4",
    "rich ~= 13.7",
    "ruamel.yaml ~= 0.17",
    "schedule ~= 1.2",
    "supervisor ~= 4.2",
    "tomlkit ~= 0.12",
    "typer ~= 0.9",
]

[project.optional-dependencies]
dev = ["pre-commit>=3.0.0"]
tests = ["docker ~= 7.0", "pytest ~= 8.0", "pytest-cov ~= 4.0"]
docs = [
    "autodoc_pydantic>=2.0.0",
    "pydata-sphinx-theme",
    "sphinx",
    "sphinx-copybutton",
    "sphinx_design",
    "sphinxcontrib-mermaid",
]

[project.scripts]
jf = "jobflow_remote.cli.jf:app"

[project.urls]
homepage = "https://Matgenix.github.io/jobflow-remote/"
repository = "https://github.com/Matgenix/jobflow-remote"
documentation = "https://Matgenix.github.io/jobflow-remote/"
changelog = "https://matgenix.github.io/jobflow-remote/changelog"

[tool.setuptools.package-data]
jobflow_remote = ["py.typed"]

[build-system]
requires = ["setuptools >= 42", "versioningit  ~=  1.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.versioningit.vcs]
method = "git"
default-tag = "0.0.1"

[tool.mypy]
ignore_missing_imports = true
strict_optional = false
plugins = "pydantic.mypy"
follow_imports = "skip"
warn_redundant_casts = true
warn_unused_ignores = true
check_untyped_defs = false
no_implicit_reexport = true
disallow_untyped_defs = false

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[tool.pytest.ini_options]
filterwarnings = [
    "ignore:.*POTCAR.*:UserWarning",
    "ignore:.*input structure.*:UserWarning",
    "ignore:.*is not gzipped.*:UserWarning",
    "ignore:.*magmom.*:UserWarning",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
include = ["src/*"]
parallel = true
branch = true

[tool.coverage.paths]
source = ["src/"]

[tool.coverage.report]
skip_covered = true
show_missing = true
exclude_lines = [
    '^\s*@overload( |$)',
    '^\s*assert False(,|$)',
    'if typing.TYPE_CHECKING:',
]
